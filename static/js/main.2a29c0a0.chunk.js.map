{"version":3,"sources":["components/Table.js","App.js","reportWebVitals.js","index.js"],"names":["Table","state","userInfo","filteredUserInfo","nameFilter","handleInputChange","event","console","log","target","value","filterThis","filter","employee","i","name","first","toUpperCase","includes","setState","this","getUserInfo","axios","get","then","response","data","results","catch","error","className","type","id","onChange","scope","map","src","picture","thumbnail","last","gender","email","phone","Component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iPAuEeA,E,4MAnEXC,MAAQ,CACJC,SAAU,GACVC,iBAAkB,GAClBC,WAAY,I,EAqBhBC,kBAAoB,SAACC,GACjBC,QAAQC,IAAIF,EAAMG,OAAOC,OAE1BH,QAAQC,IAAI,EAAKP,MAAMC,UACtB,IAAMS,EAAa,EAAKV,MAAME,iBAAiBS,QAAO,SAACC,EAAUC,GAC7D,OAAQD,EAASE,KAAKC,MAAMC,cAAcC,SAASZ,EAAMG,OAAOC,MAAMO,kBAG1E,EAAKE,SAAS,CAAEf,WAAYE,EAAMG,OAAOC,MAAOP,iBAAkBQ,K,uDA3BtE,WACIS,KAAKC,gB,yBAET,WAAe,IAAD,OACVC,IAAMC,IAAI,yCACLC,MAAK,SAACC,GAEHlB,QAAQC,IAAIiB,EAASC,KAAKC,SAC1B,EAAKR,SAAS,CAAEjB,SAAUuB,EAASC,KAAKC,QAASxB,iBAAkBsB,EAASC,KAAKC,aAEpFC,OAAM,SAAUC,GAEbtB,QAAQC,IAAIqB,MAEfL,MAAK,iB,oBAgBd,WACI,OAEI,sBAAKM,UAAU,YAAf,UACKV,KAAKnB,MAAMG,WACZ,uBAAO2B,KAAK,OAAOC,GAAG,SAASjB,KAAK,SAASkB,SAAUb,KAAKf,oBAC5D,wBAAOyB,UAAU,QAAjB,UACI,gCACI,+BACI,oBAAII,MAAM,MAAV,qBACA,oBAAIA,MAAM,MAAV,kBACA,oBAAIA,MAAM,MAAV,oBACA,oBAAIA,MAAM,MAAV,mBACA,oBAAIA,MAAM,MAAV,wBAIR,gCACKd,KAAKnB,MAAME,iBAAiBgC,KAAI,SAACtB,EAAUC,GACxC,OAAQ,+BAAI,6BAAI,qBAAKsB,IAAKvB,EAASwB,QAAQC,cAAsB,uCAAQzB,EAASE,KAAKC,MAAtB,YAA+BH,EAASE,KAAKwB,QAAY,6BAAK1B,EAAS2B,SAAY,6BAAK3B,EAAS4B,QAAW,6BAAK5B,EAAS6B,0B,GAvDnMC,a,MCQLC,MARf,WACE,OACA,8BACE,cAAC,EAAD,OCMWC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBvB,MAAK,YAAkD,IAA/CwB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.2a29c0a0.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport axios from \"axios\"\r\n\r\nclass Table extends Component {\r\n    state = {\r\n        userInfo: [],\r\n        filteredUserInfo: [],\r\n        nameFilter: \"\"\r\n    }\r\n    componentDidMount() {\r\n        this.getUserInfo()\r\n    }\r\n    getUserInfo() {\r\n        axios.get('https://randomuser.me/api/?results=30')\r\n            .then((response) => {\r\n                // handle success\r\n                console.log(response.data.results);\r\n                this.setState({ userInfo: response.data.results, filteredUserInfo: response.data.results })\r\n            })\r\n            .catch(function (error) {\r\n                // handle error\r\n                console.log(error);\r\n            })\r\n            .then(function () {\r\n                // always executed\r\n            });\r\n    }\r\n\r\n    handleInputChange = (event) => {\r\n        console.log(event.target.value)\r\n       \r\n       console.log(this.state.userInfo)\r\n        const filterThis = this.state.filteredUserInfo.filter((employee, i) => {\r\n            return (employee.name.first.toUpperCase().includes(event.target.value.toUpperCase()))\r\n        })\r\n\r\n        this.setState({ nameFilter: event.target.value, filteredUserInfo: filterThis })\r\n\r\n    }\r\n    render() {\r\n        return (\r\n\r\n            <div className=\"container\">\r\n                {this.state.nameFilter}\r\n                <input type=\"text\" id=\"search\" name=\"search\" onChange={this.handleInputChange} />\r\n                <table className=\"table\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th scope=\"col\">Picture</th>\r\n                            <th scope=\"col\">Name</th>\r\n                            <th scope=\"col\">Gender</th>\r\n                            <th scope=\"col\">Email</th>\r\n                            <th scope=\"col\">Phone</th>\r\n\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {this.state.filteredUserInfo.map((employee, i) => {\r\n                            return (<tr><td><img src={employee.picture.thumbnail}></img></td><td>{`${employee.name.first} ${employee.name.last}`}</td><td>{employee.gender}</td><td>{employee.email}</td><td>{employee.phone}</td></tr>\r\n                            )\r\n\r\n                        })}\r\n\r\n\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Table;","import Table from './components/Table';\nimport './App.css';\n\nfunction App() {\n  return (\n  <div>\n    <Table/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}